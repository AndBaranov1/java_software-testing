apply plugin: 'java'
apply plugin: 'io.qameta.allure'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

repositories {
    mavenCentral()
}

configurations {
    agent
}

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
    aspectjVersion = '1.9.6'
    allureJavaVersion = '2.17.2'
}

dependencies {
    implementation 'org.testng:testng:7.5'
    implementation 'org.seleniumhq.selenium:selenium-java:4.1.4'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'commons-net:commons-net:3.8.0'
    implementation 'com.beust:jcommander:1.81'
    implementation 'com.thoughtworks.xstream:xstream:1.4.17'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha12'
    implementation 'mysql:mysql-connector-java:8.0.27'
    implementation 'org.hibernate:hibernate-core:5.6.8.Final'
    implementation 'com.jayway.restassured:rest-assured:2.9.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    agent "org.aspectj:aspectjweaver:1.8.0"
    implementation "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    implementation 'org.robotframework:robotframework:4.1.2'
    implementation 'info.cukes:cucumber-java:1.2.6'
    implementation 'info.cukes:cucumber-testng:1.2.6'
    implementation 'org.subethamail:subethasmtp:3.1.7'
    implementation 'ru.lanwen.verbalregex:java-verbal-expressions:1.8'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'
}
task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    /*
    if(project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

     */
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('groupsVerifyUI')) {
        systemProperty 'groupsVerifyUI', "${groupsVerifyUI}"
    }
}

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testContacts(type: Test) {
    useTestNG{
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    /*
    if(project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

     */
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('contactsVerifyUI')) {
        systemProperty 'contactsVerifyUI', "${contactsVerifyUI}"
    }

}

task rf(type: JavaExec){
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}
